1 - select synonym - calls double wildcard with procName = "main"
procedure p, p1;
Select p with p.procName = "main"
main
5000
2 - select synonym - calls double wildcard with procName = "unknown"
procedure p, p1;
Select p such that Calls(_,_) with p.procName = "unknown"

5000
3 - select synonym - calls double wildcard with procName = "bad_name"
procedure p, p1;
Select p such that Calls(_,_) with p.procName = "bad_unknown"
SyntaxError
5000
4 - select synonym - calls double wildcard with 1 = 1 TRUE
procedure p, p1;
Select p such that Calls(_,_) with 1 = 1
fourth, main, second, third
5000
5 - select synonym - calls double wildcard with "a" = "a" TRUE
procedure p, p1;
Select p such that Calls(_,_) with "a" = "a"
fourth, main, second, third
5000
6 - select synonym - calls double wildcard with "a" = "a1" FALSE
procedure p, p1;
Select p such that Calls(_,_) with "a" = "a1"

5000
7 - select synonym - calls double wildcard with "a" = 1 SemanticError
procedure p, p1;
Select p such that Calls(_,_) with "a" = 1
SemanticError
5000
8 - select synonym - varName with v.varName = "x1"
variable v;
Select v with v.varName = "x1"
x1
5000
9 - select synonym - value with c.value = "1"
constant c;
Select c with c.value = 1
1
5000
10 - select synonym - variable with p.procName = "main"
variable v; procedure p;
Select v with p.procName = "main"
x1, x16, x18, x19, x2, x21, x22, x23, x3, x31, x36, x6, x9
5000
11 - select synonym - variable with p.procName = "unknown"
variable v; procedure p;
Select v with p.procName = "unknown"

5000
12 - select synonym, multiple with - variable with p.procName = "main" and v.varName = "x16"
variable v; procedure p;
Select v with p.procName = "main" and v.varName = "x16"
x16
5000
21 - valid Uses_P - one variable - select variable
variable v;
Select v such that Uses("third", v) with v.varName = "x21"
x21
5000
22 - valid Uses_P - one variable - select variable
variable v; procedure p;
Select v such that Uses("main", v) with p.procName = "main"
x1, x16, x2, x21, x22, x23, x3, x31, x36, x6, x9
5000
23 - valid Uses_P - one variable - non existing proc
variable v;
Select v such that Uses("first", v)
none
5000
24 - valid Uses_S - one variable - procedure call
variable v; stmt s;
Select v such that Uses(s, v) with s.stmt# = 5
x16
5000
25 - valid Uses_S - one variable - procedure call
variable v; stmt s;
Select v with s.stmt# = 24 such that Uses(s, v)
x16, x22, x23, x31, x36
5000
26 - valid Uses_S - one variable
variable v;
Select v such that Uses("fourth", v)
x16, x21, x22, x23, x31, x36
5000
27 - valid Uses_P - one proc - one variable - non uses rs
variable v;
Select v such that Uses("third", v) with v.varName = "x19"
none
5000
28 - valid Uses_P - one proc - one variable
variable v;
Select v such that Uses("second", v) with v.varName = "x16"
x16
5000
29 - valid Uses_S - one ifs container
variable v; if ifs; constant c;
Select ifs such that Uses(ifs, "x6") with c.value = 9999
none
5000
30 - valid Uses_S 
variable v; constant c;
Select v such that Uses(8, v)  with     c.value   = 9999
x1, x16, x2, x21, x22, x23, x31, x36, x6, x9
5000
31 - valid Uses_S - one var syn - one while container
variable v; read re;
Select v such that Uses(24, v) with re.stmt# = 31
x16, x22, x23, x31, x36
5000
32 - valid Uses_S - one while container
variable v; while w;
Select w such that Uses(w, "x36") with w.stmt# = 30
30
5000
33 - valid Uses_S - nested while container
variable v; while w;
Select w such that Uses(24, w) with w.stmt# = 24
SemanticError
5000
34 - valid uses_S - one wildcard - one read
assign a, a1; variable v, v1; stmt s, s1; read r; print pn; while w; if ifs; constant c; procedure p;
Select s such that Uses(r, _) with r.stmt# = 2
none
5000
35 - valid uses_S - one wildcard - one print
assign a, a1; variable v, v1; stmt s, s1; read r; print pn; while w; if ifs; constant c; procedure p;
Select s such that Uses(pn, v) with pn.stmt# = 7
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37
5000
36 - valid Uses_S - one print - one var - select pn
print pn; variable v;
Select pn such that Uses(pn, v) with v.varName = "x3"
7
5000
37 - valid Uses_S - one print - one var - select var
print pn; variable v;
Select v such that Uses(pn, v) with pn.stmt# = 17
x16
5000
38 - valid Uses_P - one procedure - none
procedure p;
Select p such that Uses(p, "x19") with p.procName = "third"
none
5000
39 - valid Uses_P - one procedure
procedure p;
Select p such that Uses(p, "x16") with p.procName = "main"
main
5000
40 - invalid Uses_P - one procedure
procedure p;
Select p such that Uses(p, "f0urth") with p.procName = "main"
none
5000
41 - valid Uses_P
variable v;
Select BOOLEAN such that Uses("third", "x19") with v.varName = "x19"
FALSE
5000
42 - valid Uses_P - one wildcard
constant c;
Select BOOLEAN such that Uses("second", _) with c.value = 9999
TRUE
5000
43 - valid Uses_P - one wildcard
procedure p;
Select BOOLEAN such that Uses("main", _) with p.procName = "second"
TRUE
5000
44 - valid Uses_P - one procedureName - one var
variable v;
Select v such that Uses("second", v) with v.varName = "fifty"
none
5000
45 - valid Uses_P - one procedure call
call ca;
Select BOOLEAN such that Uses(ca, _) with ca.stmt# = 29
TRUE
5000
46 - valid Uses_P - one procedureName - one var
variable v;
Select v such that Uses("second", v) with v.varName = "x12345"
none
5000
47 - valid Uses_S - one variable - procedure call
variable v;
Select v with v.varName = "x19" such that Uses(12, v)
none
5000
48 - valid Uses_S - one variable - procedure call
variable v;
Select v such that Uses(13, v) with v.varName = "x22"
x22
5000
49 - valid Uses_P - one procedure - unknown procName
procedure p;
Select p such that Uses(p, "x16") with p.procName = "man"
none
5000
50 - valid Uses_P - one procedure - invalid procName
procedure p;
Select p such that Uses(p, "x16") with p.procName = "1main"
SyntaxError
5000
51 - valid uses_S - one wildcard - one read - invalid stmt#
assign a, a1; variable v, v1; stmt s, s1; read r; print pn; while w; if ifs; constant c; procedure p;
Select s such that Uses(r, _) with r.stmt# = "2"
SyntaxError
5000
52 - valid select attribute
assign a, a1; variable v, v1; stmt s, s1; read r; print pn; while w; if ifs; constant c; procedure p;
Select r.varName
x1, x2, x21, x31 
5000
53 - valid select attribute with r.varName = pn.varName
assign a, a1; variable v, v1; stmt s, s1; read r; print pn; while w; if ifs; constant c; procedure p;
Select r.varName with r.varName = pn.varName
x1, x31 
5000
54 - valid select tuple attribute with r.varName = pn.varName
assign a, a1; variable v, v1; stmt s, s1; read r; print pn; while w; if ifs; constant c; procedure p;
Select <r.varName, pn.varName> with r.varName = pn.varName
x1 x1, x31 x31
5000
55 - valid select tuple vals with r.varName = pn.varName
assign a, a1; variable v, v1; stmt s, s1; read r; print pn; while w; if ifs; constant c; procedure p;
Select <r, pn> with r.varName = pn.varName
1 15, 31 32
5000
56 - select BOOLEAN where r.varName = pn.varName
assign a, a1; variable v, v1; stmt s, s1; read r; print pn; while w; if ifs; constant c; procedure p;
Select BOOLEAN with r.varName = pn.varName
TRUE
5000